buildscript {
    repositories {
        jcenter()
    }
    dependencies {
    }
}

plugins {
    id 'kotlin-multiplatform' version '1.3.31'
}


repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    mavenCentral()
}
def ktor_version = '1.1.3'
def logback_version = '1.2.3'

group = "upe.poli.meuservidor"
version = "0.0.1"

kotlin {
    jvm()
    js() {
        compilations.all {
            kotlinOptions {
                languageVersion = "1.3"
                moduleKind = "umd"
                sourceMap = true
                metaInfo = true
            }
        }
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }

        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "io.ktor:ktor-server-netty:$ktor_version"
                implementation "io.ktor:ktor-html-builder:$ktor_version"
                implementation "ch.qos.logback:logback-classic:$logback_version"
            }
        }

        jsMain {
            dependencies {
                implementation kotlin('stdlib-js')
            }
        }
    }
}

def webFolder = new File(project.buildDir, "./web/")
def jsCompilations = kotlin.targets.js.compilations

task populateWebFolder(dependsOn: [jsMainClasses]) {
    doLast {
        copy {
            from jsCompilations.main.output
            from kotlin.sourceSets.jsMain.resources.srcDirs
            jsCompilations.test.runtimeDependencyFiles.each {
                if (it.exists() && !it.isDirectory()) {
                    from zipTree(it.absolutePath).matching { include '*.js' }
                }
            }
            into new File(webFolder,"/js")
        }
        copy {
            from new File("./src/web")
            into webFolder
        }
    }
}

jsJar.dependsOn(populateWebFolder)

task compile(dependsOn: [jvmMainClasses, jsJar])

task run(type: JavaExec, dependsOn: [compile]) {
    main = "sample.SampleJvmKt"
    println("ola mundo : " + kotlin.targets.jvm.compilations.main.output.allOutputs.files)
    println(configurations.jvmRuntimeClasspath)
    //configurations.jvmRuntimeClasspath.forEach {
    //    println("Dependencia : ")
    //}
    classpath { [
            kotlin.targets.jvm.compilations.main.output.allOutputs.files,
            configurations.jvmRuntimeClasspath,
    ] }
    args = []
}


